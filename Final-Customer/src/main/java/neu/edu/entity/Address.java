package neu.edu.entity;
// Generated 2022年12月17日 上午8:45:24 by Hibernate Tools 4.3.6.Final


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Address generated by hbm2java
 */
@Entity
@JsonIgnoreProperties({"customers"})
@Table(name="address"
    ,catalog="customer"
)
public class Address  implements java.io.Serializable {


     private Integer id;
     private Location location;
     private String addressLine1;
     private Set<Customer> customers = new HashSet<Customer>(0);

    public Address() {
    }

	
    public Address(Location location, String addressLine1) {
        this.location = location;
        this.addressLine1 = addressLine1;
    }
    public Address(Location location, String addressLine1, Set<Customer> customers) {
       this.location = location;
       this.addressLine1 = addressLine1;
       this.customers = customers;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="location_id", nullable=false)
    public Location getLocation() {
        return this.location;
    }
    
    public void setLocation(Location location) {
        this.location = location;
    }

    
    @Column(name="address_line1", nullable=false, length=45)
    public String getAddressLine1() {
        return this.addressLine1;
    }
    
    public void setAddressLine1(String addressLine1) {
        this.addressLine1 = addressLine1;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="address")
    public Set<Customer> getCustomers() {
        return this.customers;
    }
    
    public void setCustomers(Set<Customer> customers) {
        this.customers = customers;
    }




}



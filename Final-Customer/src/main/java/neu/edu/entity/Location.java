package neu.edu.entity;
// Generated 2022年12月17日 上午8:45:24 by Hibernate Tools 4.3.6.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Location generated by hbm2java
 */
@Entity
@JsonIgnoreProperties({"addresses"})
@Table(name = "location", catalog = "customer", uniqueConstraints = @UniqueConstraint(columnNames = { "city", "state",
		"country" }))
public class Location implements java.io.Serializable {

	private Integer id;
	private String city;
	private String state;
	private String country;
	private Set<Address> addresses = new HashSet<Address>(0);

	public Location() {
	}

	public Location(String city, String state, String country) {
		this.city = city;
		this.state = state;
		this.country = country;
	}

	public Location(String city, String state, String country, Set<Address> addresses) {
		this.city = city;
		this.state = state;
		this.country = country;
		this.addresses = addresses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "city", nullable = false, length = 45)
	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	@Column(name = "state", nullable = false, length = 45)
	public String getState() {
		return this.state;
	}

	public void setState(String state) {
		this.state = state;
	}

	@Column(name = "country", nullable = false, length = 45)
	public String getCountry() {
		return this.country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "location")
	public Set<Address> getAddresses() {
		return this.addresses;
	}

	public void setAddresses(Set<Address> addresses) {
		this.addresses = addresses;
	}

}

package neu.edu.entity.distributor;
// Generated 2022年12月17日 上午3:40:48 by Hibernate Tools 4.3.6.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * Distributor generated by hbm2java
 */
@Entity
@Table(name = "distributor", catalog = "distributor")
public class Distributor implements java.io.Serializable {

	private Integer id;
	private LocationD location;
	private String name;
	private String phone;
	private String email;
	private String address;
	private String description;
	private SupplyChainIssueD supplyChainIssue;
	private Set<ShipmentD> shipments = new HashSet<ShipmentD>(0);
	private Set<DistributorManager> distributorManagers = new HashSet<DistributorManager>(0);
	private Set<OrderToManufacture> orderToManufactures = new HashSet<OrderToManufacture>(0);
	private Set<ProductInventory> productInventories = new HashSet<ProductInventory>(0);

	public Distributor() {
	}

	public Distributor(LocationD location, String name, String phone, String email, String address, String description) {
		this.location = location;
		this.name = name;
		this.phone = phone;
		this.email = email;
		this.address = address;
		this.description = description;
	}
	
	public Distributor(LocationD location, String name, String phone, String email, String address) {
		this.location = location;
		this.name = name;
		this.phone = phone;
		this.email = email;
		this.address = address;
	}

	public Distributor(LocationD location, String name, String phone, String email, String address, String description,
			SupplyChainIssueD supplyChainIssue, Set<ShipmentD> shipments, Set<DistributorManager> distributorManagers,
			Set<OrderToManufacture> orderToManufactures, Set<ProductInventory> productInventories) {
		this.location = location;
		this.name = name;
		this.phone = phone;
		this.email = email;
		this.address = address;
		this.description = description;
		this.supplyChainIssue = supplyChainIssue;
		this.shipments = shipments;
		this.distributorManagers = distributorManagers;
		this.orderToManufactures = orderToManufactures;
		this.productInventories = productInventories;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "location_id", nullable = false)
	public LocationD getLocation() {
		return this.location;
	}

	public void setLocation(LocationD location) {
		this.location = location;
	}

	@Column(name = "name", nullable = false, length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "phone", nullable = false, length = 10)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "email", nullable = false, length = 35)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "address", nullable = false, length = 45)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "description", length = 45)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "distributor")
	public SupplyChainIssueD getSupplyChainIssue() {
		return this.supplyChainIssue;
	}

	public void setSupplyChainIssue(SupplyChainIssueD supplyChainIssue) {
		this.supplyChainIssue = supplyChainIssue;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "distributor")
	public Set<ShipmentD> getShipments() {
		return this.shipments;
	}

	public void setShipments(Set<ShipmentD> shipments) {
		this.shipments = shipments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "distributor")
	public Set<DistributorManager> getDistributorManagers() {
		return this.distributorManagers;
	}

	public void setDistributorManagers(Set<DistributorManager> distributorManagers) {
		this.distributorManagers = distributorManagers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "distributor")
	public Set<OrderToManufacture> getOrderToManufactures() {
		return this.orderToManufactures;
	}

	public void setOrderToManufactures(Set<OrderToManufacture> orderToManufactures) {
		this.orderToManufactures = orderToManufactures;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "distributor")
	public Set<ProductInventory> getProductInventories() {
		return this.productInventories;
	}

	public void setProductInventories(Set<ProductInventory> productInventories) {
		this.productInventories = productInventories;
	}

}

package neu.edu.entity.manufacture;
// Generated 2022年12月17日 上午12:42:48 by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Manufacture generated by hbm2java
 */
@Entity
@Table(name = "manufacture", catalog = "manufacture")
public class Manufacture implements java.io.Serializable {

	private Integer id;
	private LocationM location;
	private String name;
	private String phone;
	private String email;
	private String address;
	private String description;
	private Date createdDate;
	private Set<OrderToSupplier> orderToSuppliers = new HashSet<OrderToSupplier>(0);
	private Set<Product> products = new HashSet<Product>(0);
	private SupplyChainIssueM supplyChainIssue;
	private Set<ShipmentM> shipments = new HashSet<ShipmentM>(0);
	private Set<ManufactureManager> manufactureManagers = new HashSet<ManufactureManager>(0);

	public Manufacture() {
	}

	public Manufacture(LocationM location, String name, String phone, String email, String address, Date createdDate) {
		this.location = location;
		this.name = name;
		this.phone = phone;
		this.email = email;
		this.address = address;
		this.createdDate = createdDate;
	}

	public Manufacture(LocationM location, String name, String phone, String email, String address, String description,
			Date createdDate, Set<OrderToSupplier> orderToSuppliers, Set<Product> products,
			SupplyChainIssueM supplyChainIssue, Set<ShipmentM> shipments, Set<ManufactureManager> manufactureManagers) {
		this.location = location;
		this.name = name;
		this.phone = phone;
		this.email = email;
		this.address = address;
		this.description = description;
		this.createdDate = createdDate;
		this.orderToSuppliers = orderToSuppliers;
		this.products = products;
		this.supplyChainIssue = supplyChainIssue;
		this.shipments = shipments;
		this.manufactureManagers = manufactureManagers;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "location_id", nullable = false)
	public LocationM getLocation() {
		return this.location;
	}

	public void setLocation(LocationM location) {
		this.location = location;
	}

	@Column(name = "name", nullable = false, length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "phone", nullable = false, length = 10)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "email", nullable = false, length = 30)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "address", nullable = false, length = 45)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "description", length = 45)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "manufacture")
	public Set<OrderToSupplier> getOrderToSuppliers() {
		return this.orderToSuppliers;
	}

	public void setOrderToSuppliers(Set<OrderToSupplier> orderToSuppliers) {
		this.orderToSuppliers = orderToSuppliers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "manufacture")
	public Set<Product> getProducts() {
		return this.products;
	}

	public void setProducts(Set<Product> products) {
		this.products = products;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "manufacture")
	public SupplyChainIssueM getSupplyChainIssue() {
		return this.supplyChainIssue;
	}

	public void setSupplyChainIssue(SupplyChainIssueM supplyChainIssue) {
		this.supplyChainIssue = supplyChainIssue;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "manufacture")
	public Set<ShipmentM> getShipments() {
		return this.shipments;
	}

	public void setShipments(Set<ShipmentM> shipments) {
		this.shipments = shipments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "manufacture")
	public Set<ManufactureManager> getManufactureManagers() {
		return this.manufactureManagers;
	}

	public void setManufactureManagers(Set<ManufactureManager> manufactureManagers) {
		this.manufactureManagers = manufactureManagers;
	}

}
